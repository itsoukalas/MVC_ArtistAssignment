@model ArtistAssignment.ViewModels.SongFormViewModel
@{
    ViewBag.Title = "Song";
}

<h2>Song</h2>
@using (Html.BeginForm("Save", "Songs"))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Song.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Song.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Song.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Song.Youtube, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Song.Youtube, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Song.Youtube, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Song.AlbumId, "Album", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Song.AlbumId, new SelectList(Model.Albums, "ID", "Title"), "Select Album", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Song.AlbumId, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(m => m.Song.ID)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>

        </div>
    </div>


}
<div>
    @Html.ActionLink("Back to List", "Index")

</div>

@* We will add some client-side validation in order to prevent unnecessary requests on the server. 
    So go at the bottom of SongForm view and add the jQuery validation *@
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
